// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ovjdXhydzXTq3Bc7u9wCpt
// Component: 5sVX8TQhxB
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import DashboardSidebar from "../../DashboardSidebar"; // plasmic-import: 7WJwRnVAxlX/component
import DashboardHeader from "../../DashboardHeader"; // plasmic-import: D_xLN7HSDJ/component
import PostBox from "../../PostBox"; // plasmic-import: Dq6gvuXdNEn/component
import CommentBox from "../../CommentBox"; // plasmic-import: aD3gQOgm7t/component
import SelectCategory from "../../SelectCategory"; // plasmic-import: 6HSr9YyfAE/component
import MessagesBox from "../../MessagesBox"; // plasmic-import: 5K0H0lW6HF/component
import { useScreenVariants as useScreenVariantsgcBBykOvh4Vq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gcB_bykOvh4VQ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_2_geda.module.css"; // plasmic-import: ovjdXhydzXTq3Bc7u9wCpt/projectcss
import sty from "./PlasmicDashboard.module.css"; // plasmic-import: 5sVX8TQhxB/css
import House2Icon from "./icons/PlasmicIcon__House2"; // plasmic-import: UBzSFCsqKA/icon
import Storefront2Icon from "./icons/PlasmicIcon__Storefront2"; // plasmic-import: JTFEUy6Cm/icon
import Vector98Icon from "./icons/PlasmicIcon__Vector98"; // plasmic-import: 16FxAcX7bS/icon
import Vector99Icon from "./icons/PlasmicIcon__Vector99"; // plasmic-import: Kia4anGgTs/icon
import Bell2Icon from "./icons/PlasmicIcon__Bell2"; // plasmic-import: mRSf-KBLs/icon
import UserCircle2Icon from "./icons/PlasmicIcon__UserCircle2"; // plasmic-import: PDxXU3RZq9/icon
import imagepngCFPpvc8S from "./images/imagepng.png"; // plasmic-import: C_fPPVC8s/picture
import videoCamerapngAsa6YwWaw from "./images/videoCamerapng.png"; // plasmic-import: asa6YWWaw/picture
import smileyStickerpngJbiUkXsIu from "./images/smileyStickerpng.png"; // plasmic-import: jbiUkXsIu/picture
import ellipse20WFPavNohc from "./images/ellipse20.svg"; // plasmic-import: -wFPavNOHC/picture
import ellipse25Fl0ULz14Q from "./images/ellipse25.svg"; // plasmic-import: fl0U_lz14q/picture
import ellipse22LUqnlFsU0Q from "./images/ellipse22.svg"; // plasmic-import: LUqnlFsU0Q/picture
import ellipse26FJAd6PnElk from "./images/ellipse26.svg"; // plasmic-import: fJAd6PnELK/picture
import ellipse2392CTrYBsQz from "./images/ellipse23.svg"; // plasmic-import: 92CTrYBsQz/picture
import ellipse21Y9IZfEfRmY from "./images/ellipse21.svg"; // plasmic-import: y9IZfEfRmY/picture
import ellipse24TGnei26Fio from "./images/ellipse24.svg"; // plasmic-import: TGnei26fio/picture
import ellipse27Sok7Ktx2Uk from "./images/ellipse27.svg"; // plasmic-import: SOK7Ktx2Uk/picture

export const PlasmicDashboard__VariantProps = new Array();

export const PlasmicDashboard__ArgProps = new Array();

function PlasmicDashboard__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgcBBykOvh4Vq()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"container"}
            data-plasmic-override={overrides.container}
            className={classNames(projectcss.all, sty.container)}
          >
            <DashboardSidebar
              data-plasmic-name={"dashboardSidebar"}
              data-plasmic-override={overrides.dashboardSidebar}
              className={classNames("__wab_instance", sty.dashboardSidebar)}
            />

            <div
              data-plasmic-name={"content"}
              data-plasmic-override={overrides.content}
              className={classNames(projectcss.all, sty.content)}
            >
              <DashboardHeader
                data-plasmic-name={"dashboardHeader"}
                data-plasmic-override={overrides.dashboardHeader}
                className={classNames("__wab_instance", sty.dashboardHeader)}
              />

              <div
                data-plasmic-name={"contentMain"}
                data-plasmic-override={overrides.contentMain}
                className={classNames(projectcss.all, sty.contentMain)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobile")
                    ? true
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? true
                    : true
                ) ? (
                  <div
                    data-plasmic-name={"random"}
                    data-plasmic-override={overrides.random}
                    className={classNames(projectcss.all, sty.random)}
                  />
                ) : null}

                <div
                  data-plasmic-name={"fixedContainer"}
                  data-plasmic-override={overrides.fixedContainer}
                  className={classNames(projectcss.all, sty.fixedContainer)}
                >
                  <div
                    data-plasmic-name={"contentMainLeft"}
                    data-plasmic-override={overrides.contentMainLeft}
                    className={classNames(projectcss.all, sty.contentMainLeft)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"uploadBox"}
                      data-plasmic-override={overrides.uploadBox}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.uploadBox)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9I7Kq
                        )}
                      >
                        {"Post on feed"}
                      </div>

                      <textarea
                        data-plasmic-name={"textarea"}
                        data-plasmic-override={overrides.textarea}
                        className={classNames(
                          projectcss.all,
                          projectcss.textarea,
                          sty.textarea
                        )}
                        placeholder={"write up to 1,000 words"}
                        value={""}
                      />

                      <div
                        data-plasmic-name={"uploadButtons"}
                        data-plasmic-override={overrides.uploadButtons}
                        className={classNames(
                          projectcss.all,
                          sty.uploadButtons
                        )}
                      >
                        <div
                          data-plasmic-name={"uploadLeft"}
                          data-plasmic-override={overrides.uploadLeft}
                          className={classNames(projectcss.all, sty.uploadLeft)}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___4HEg0)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: imagepngCFPpvc8S,
                              fullWidth: 24,
                              fullHeight: 25,
                              aspectRatio: undefined
                            }}
                          />

                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__hkcf1)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: videoCamerapngAsa6YwWaw,
                              fullWidth: 24,
                              fullHeight: 25,
                              aspectRatio: undefined
                            }}
                          />

                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__hUfXx)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: smileyStickerpngJbiUkXsIu,
                              fullWidth: 24,
                              fullHeight: 25,
                              aspectRatio: undefined
                            }}
                          />
                        </div>

                        <div
                          data-plasmic-name={"uploadRight"}
                          data-plasmic-override={overrides.uploadRight}
                          className={classNames(
                            projectcss.all,
                            sty.uploadRight
                          )}
                        >
                          <button
                            data-plasmic-name={"button"}
                            data-plasmic-override={overrides.button}
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              projectcss.__wab_text,
                              sty.button
                            )}
                          >
                            {"Post"}
                          </button>
                        </div>
                      </div>
                    </p.Stack>

                    <PostBox
                      data-plasmic-name={"postBox"}
                      data-plasmic-override={overrides.postBox}
                      className={classNames("__wab_instance", sty.postBox)}
                    />

                    <CommentBox
                      data-plasmic-name={"commentBox"}
                      data-plasmic-override={overrides.commentBox}
                      className={classNames("__wab_instance", sty.commentBox)}
                    />
                  </div>
                </div>

                {(
                  hasVariant(globalVariants, "screen", "mobile")
                    ? true
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? true
                    : true
                ) ? (
                  <div
                    data-plasmic-name={"contentMainRight"}
                    data-plasmic-override={overrides.contentMainRight}
                    className={classNames(projectcss.all, sty.contentMainRight)}
                  >
                    <SelectCategory
                      data-plasmic-name={"selectCategory"}
                      data-plasmic-override={overrides.selectCategory}
                      className={classNames(
                        "__wab_instance",
                        sty.selectCategory
                      )}
                    />

                    <div
                      data-plasmic-name={"dashboardFollowers"}
                      data-plasmic-override={overrides.dashboardFollowers}
                      className={classNames(
                        projectcss.all,
                        sty.dashboardFollowers
                      )}
                    >
                      <div
                        data-plasmic-name={"group295"}
                        data-plasmic-override={overrides.group295}
                        className={classNames(projectcss.all, sty.group295)}
                      >
                        <div
                          data-plasmic-name={"rectangle301"}
                          data-plasmic-override={overrides.rectangle301}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle301
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tjI1
                          )}
                        >
                          {"Followers"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tYFxM
                          )}
                        >
                          {"See all"}
                        </div>

                        <div
                          data-plasmic-name={"group296"}
                          data-plasmic-override={overrides.group296}
                          className={classNames(projectcss.all, sty.group296)}
                        >
                          <div
                            data-plasmic-name={"rectangle208"}
                            data-plasmic-override={overrides.rectangle208}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle208
                            )}
                          />

                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__fLpto)}
                            displayHeight={"46px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"45px"}
                            loading={"lazy"}
                            src={{
                              src: ellipse20WFPavNohc,
                              fullWidth: 45,
                              fullHeight: 46,
                              aspectRatio: 0.978261
                            }}
                          />

                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__rxjh)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse25Fl0ULz14Q,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__aAbL7)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse22LUqnlFsU0Q,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__uBQh)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse26FJAd6PnElk,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__vtXH)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse2392CTrYBsQz,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img___2Jjey)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse21Y9IZfEfRmY,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ftWk7)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse24TGnei26Fio,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__muTcb)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse27Sok7Ktx2Uk,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                        </div>
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"messages2"}
                      data-plasmic-override={overrides.messages2}
                      className={classNames(projectcss.all, sty.messages2)}
                    >
                      <MessagesBox
                        data-plasmic-name={"messagesBox"}
                        data-plasmic-override={overrides.messagesBox}
                        className={classNames(
                          "__wab_instance",
                          sty.messagesBox
                        )}
                      />
                    </div>
                  </div>
                ) : null}
              </div>

              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"bottomNav"}
                  data-plasmic-override={overrides.bottomNav}
                  className={classNames(projectcss.all, sty.bottomNav)}
                >
                  <div
                    data-plasmic-name={"group139"}
                    data-plasmic-override={overrides.group139}
                    className={classNames(projectcss.all, sty.group139)}
                  >
                    <div
                      data-plasmic-name={"rectangle45"}
                      data-plasmic-override={overrides.rectangle45}
                      className={classNames(projectcss.all, sty.rectangle45)}
                    />

                    <div
                      data-plasmic-name={"home"}
                      data-plasmic-override={overrides.home}
                      className={classNames(projectcss.all, sty.home)}
                    >
                      {(
                        hasVariant(globalVariants, "screen", "mobile")
                          ? true
                          : true
                      ) ? (
                        <House2Icon
                          className={classNames(projectcss.all, sty.svg__rqqcT)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bMy9V
                        )}
                      >
                        {"Home"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"marketplace"}
                      data-plasmic-override={overrides.marketplace}
                      className={classNames(projectcss.all, sty.marketplace)}
                    >
                      {(
                        hasVariant(globalVariants, "screen", "mobile")
                          ? true
                          : true
                      ) ? (
                        <Storefront2Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___6Vrtw
                          )}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cY1Pd
                        )}
                      >
                        {"Outlet"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"messages"}
                      data-plasmic-override={overrides.messages}
                      className={classNames(projectcss.all, sty.messages)}
                    >
                      <div
                        data-plasmic-name={"messages3"}
                        data-plasmic-override={overrides.messages3}
                        className={classNames(projectcss.all, sty.messages3)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4Xo3W
                          )}
                        >
                          {"Messages"}
                        </div>

                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <Vector98Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__hIgO6
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </div>

                      {(
                        hasVariant(globalVariants, "screen", "mobile")
                          ? true
                          : true
                      ) ? (
                        <Vector99Icon
                          className={classNames(projectcss.all, sty.svg__yIcWg)}
                          role={"img"}
                        />
                      ) : null}
                      {(
                        hasVariant(globalVariants, "screen", "mobile")
                          ? true
                          : true
                      ) ? (
                        <Vector99Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___6N7Yc
                          )}
                          role={"img"}
                        />
                      ) : null}
                      {(
                        hasVariant(globalVariants, "screen", "mobile")
                          ? true
                          : true
                      ) ? (
                        <Vector99Icon
                          className={classNames(projectcss.all, sty.svg__lHm5K)}
                          role={"img"}
                        />
                      ) : null}
                    </div>

                    <div
                      data-plasmic-name={"nofitication"}
                      data-plasmic-override={overrides.nofitication}
                      className={classNames(projectcss.all, sty.nofitication)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qyu35
                        )}
                      >
                        {"Notification"}
                      </div>

                      {(
                        hasVariant(globalVariants, "screen", "mobile")
                          ? true
                          : true
                      ) ? (
                        <Bell2Icon
                          className={classNames(projectcss.all, sty.svg__v0U4Y)}
                          role={"img"}
                        />
                      ) : null}
                    </div>

                    <div
                      data-plasmic-name={"profile"}
                      data-plasmic-override={overrides.profile}
                      className={classNames(projectcss.all, sty.profile)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5Dhd1
                        )}
                      >
                        {"Profile"}
                      </div>

                      {(
                        hasVariant(globalVariants, "screen", "mobile")
                          ? true
                          : true
                      ) ? (
                        <UserCircle2Icon
                          className={classNames(projectcss.all, sty.svg__dJo2T)}
                          role={"img"}
                        />
                      ) : null}
                    </div>
                  </div>
                </div>
              ) : null}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "container",
    "dashboardSidebar",
    "content",
    "dashboardHeader",
    "contentMain",
    "random",
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "button",
    "postBox",
    "commentBox",
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "messagesBox",
    "bottomNav",
    "group139",
    "rectangle45",
    "home",
    "marketplace",
    "messages",
    "messages3",
    "nofitication",
    "profile"
  ],

  container: [
    "container",
    "dashboardSidebar",
    "content",
    "dashboardHeader",
    "contentMain",
    "random",
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "button",
    "postBox",
    "commentBox",
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "messagesBox",
    "bottomNav",
    "group139",
    "rectangle45",
    "home",
    "marketplace",
    "messages",
    "messages3",
    "nofitication",
    "profile"
  ],

  dashboardSidebar: ["dashboardSidebar"],
  content: [
    "content",
    "dashboardHeader",
    "contentMain",
    "random",
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "button",
    "postBox",
    "commentBox",
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "messagesBox",
    "bottomNav",
    "group139",
    "rectangle45",
    "home",
    "marketplace",
    "messages",
    "messages3",
    "nofitication",
    "profile"
  ],

  dashboardHeader: ["dashboardHeader"],
  contentMain: [
    "contentMain",
    "random",
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "button",
    "postBox",
    "commentBox",
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "messagesBox"
  ],

  random: ["random"],
  fixedContainer: [
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "button",
    "postBox",
    "commentBox"
  ],

  contentMainLeft: [
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "button",
    "postBox",
    "commentBox"
  ],

  uploadBox: [
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "button"
  ],

  textarea: ["textarea"],
  uploadButtons: ["uploadButtons", "uploadLeft", "uploadRight", "button"],
  uploadLeft: ["uploadLeft"],
  uploadRight: ["uploadRight", "button"],
  button: ["button"],
  postBox: ["postBox"],
  commentBox: ["commentBox"],
  contentMainRight: [
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "messagesBox"
  ],

  selectCategory: ["selectCategory"],
  dashboardFollowers: [
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208"
  ],

  group295: ["group295", "rectangle301", "group296", "rectangle208"],
  rectangle301: ["rectangle301"],
  group296: ["group296", "rectangle208"],
  rectangle208: ["rectangle208"],
  messages2: ["messages2", "messagesBox"],
  messagesBox: ["messagesBox"],
  bottomNav: [
    "bottomNav",
    "group139",
    "rectangle45",
    "home",
    "marketplace",
    "messages",
    "messages3",
    "nofitication",
    "profile"
  ],

  group139: [
    "group139",
    "rectangle45",
    "home",
    "marketplace",
    "messages",
    "messages3",
    "nofitication",
    "profile"
  ],

  rectangle45: ["rectangle45"],
  home: ["home"],
  marketplace: ["marketplace"],
  messages: ["messages", "messages3"],
  messages3: ["messages3"],
  nofitication: ["nofitication"],
  profile: ["profile"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicDashboard__ArgProps,
          internalVariantPropNames: PlasmicDashboard__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicDashboard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDashboard";
  } else {
    func.displayName = `PlasmicDashboard.${nodeName}`;
  }
  return func;
}

export const PlasmicDashboard = Object.assign(
  // Top-level PlasmicDashboard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    container: makeNodeComponent("container"),
    dashboardSidebar: makeNodeComponent("dashboardSidebar"),
    content: makeNodeComponent("content"),
    dashboardHeader: makeNodeComponent("dashboardHeader"),
    contentMain: makeNodeComponent("contentMain"),
    random: makeNodeComponent("random"),
    fixedContainer: makeNodeComponent("fixedContainer"),
    contentMainLeft: makeNodeComponent("contentMainLeft"),
    uploadBox: makeNodeComponent("uploadBox"),
    textarea: makeNodeComponent("textarea"),
    uploadButtons: makeNodeComponent("uploadButtons"),
    uploadLeft: makeNodeComponent("uploadLeft"),
    uploadRight: makeNodeComponent("uploadRight"),
    button: makeNodeComponent("button"),
    postBox: makeNodeComponent("postBox"),
    commentBox: makeNodeComponent("commentBox"),
    contentMainRight: makeNodeComponent("contentMainRight"),
    selectCategory: makeNodeComponent("selectCategory"),
    dashboardFollowers: makeNodeComponent("dashboardFollowers"),
    group295: makeNodeComponent("group295"),
    rectangle301: makeNodeComponent("rectangle301"),
    group296: makeNodeComponent("group296"),
    rectangle208: makeNodeComponent("rectangle208"),
    messages2: makeNodeComponent("messages2"),
    messagesBox: makeNodeComponent("messagesBox"),
    bottomNav: makeNodeComponent("bottomNav"),
    group139: makeNodeComponent("group139"),
    rectangle45: makeNodeComponent("rectangle45"),
    home: makeNodeComponent("home"),
    marketplace: makeNodeComponent("marketplace"),
    messages: makeNodeComponent("messages"),
    messages3: makeNodeComponent("messages3"),
    nofitication: makeNodeComponent("nofitication"),
    profile: makeNodeComponent("profile"),
    // Metadata about props expected for PlasmicDashboard
    internalVariantProps: PlasmicDashboard__VariantProps,
    internalArgProps: PlasmicDashboard__ArgProps
  }
);

export default PlasmicDashboard;
/* prettier-ignore-end */
