// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ovjdXhydzXTq3Bc7u9wCpt
// Component: 5sVX8TQhxB
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import DashboardSidebar from "../../DashboardSidebar"; // plasmic-import: 7WJwRnVAxlX/component
import DashboardHeader from "../../DashboardHeader"; // plasmic-import: D_xLN7HSDJ/component
import SelectCategory from "../../SelectCategory"; // plasmic-import: 6HSr9YyfAE/component
import { useScreenVariants as useScreenVariantsgcBBykOvh4Vq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gcB_bykOvh4VQ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_2_geda.module.css"; // plasmic-import: ovjdXhydzXTq3Bc7u9wCpt/projectcss
import sty from "./PlasmicDashboard.module.css"; // plasmic-import: 5sVX8TQhxB/css
import Line3Icon from "./icons/PlasmicIcon__Line3"; // plasmic-import: 048klyCSi/icon
import imagepngCFPpvc8S from "./images/imagepng.png"; // plasmic-import: C_fPPVC8s/picture
import videoCamerapngAsa6YwWaw from "./images/videoCamerapng.png"; // plasmic-import: asa6YWWaw/picture
import smileyStickerpngJbiUkXsIu from "./images/smileyStickerpng.png"; // plasmic-import: jbiUkXsIu/picture
import maskGrouppngXE1YnDtN from "./images/maskGrouppng.png"; // plasmic-import: xE1ynDtN-/picture
import unsplashINwSiOcNzMgEGqqCl3UoC2 from "./images/unsplashINwSiOcNzMg.jpeg"; // plasmic-import: EGqqCl3UoC2/picture
import likeSvgrepoCom1PngSIx1Fq6A from "./images/likeSvgrepoCom1Png.png"; // plasmic-import: S_IX1FQ6A/picture
import commentDotsSvgrepoCompngFGbNXkfHo from "./images/commentDotsSvgrepoCompng.png"; // plasmic-import: FGbNXkfHO/picture
import group1PngSeu39MuTw from "./images/group1Png.png"; // plasmic-import: seu39MuTw/picture
import shareSvgrepoCom1Png7HVEk3STj from "./images/shareSvgrepoCom1Png.png"; // plasmic-import: 7hVEk3sTJ/picture
import optionspngXQxydTHeC from "./images/optionspng.png"; // plasmic-import: xQxydTHeC/picture
import ellipse20WFPavNohc from "./images/ellipse20.svg"; // plasmic-import: -wFPavNOHC/picture
import ellipse25Fl0ULz14Q from "./images/ellipse25.svg"; // plasmic-import: fl0U_lz14q/picture
import ellipse22LUqnlFsU0Q from "./images/ellipse22.svg"; // plasmic-import: LUqnlFsU0Q/picture
import ellipse26FJAd6PnElk from "./images/ellipse26.svg"; // plasmic-import: fJAd6PnELK/picture
import ellipse2392CTrYBsQz from "./images/ellipse23.svg"; // plasmic-import: 92CTrYBsQz/picture
import ellipse21Y9IZfEfRmY from "./images/ellipse21.svg"; // plasmic-import: y9IZfEfRmY/picture
import ellipse24TGnei26Fio from "./images/ellipse24.svg"; // plasmic-import: TGnei26fio/picture
import ellipse27Sok7Ktx2Uk from "./images/ellipse27.svg"; // plasmic-import: SOK7Ktx2Uk/picture
import ellipse36MwUq7LJfJy from "./images/ellipse36.svg"; // plasmic-import: MWUq7LJfJY/picture

export const PlasmicDashboard__VariantProps = new Array();

export const PlasmicDashboard__ArgProps = new Array();

function PlasmicDashboard__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgcBBykOvh4Vq()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"container"}
            data-plasmic-override={overrides.container}
            className={classNames(projectcss.all, sty.container)}
          >
            <DashboardSidebar
              data-plasmic-name={"dashboardSidebar"}
              data-plasmic-override={overrides.dashboardSidebar}
              className={classNames("__wab_instance", sty.dashboardSidebar)}
            />

            <div
              data-plasmic-name={"content"}
              data-plasmic-override={overrides.content}
              className={classNames(projectcss.all, sty.content)}
            >
              <DashboardHeader
                data-plasmic-name={"dashboardHeader"}
                data-plasmic-override={overrides.dashboardHeader}
                className={classNames("__wab_instance", sty.dashboardHeader)}
              />

              <div
                data-plasmic-name={"contentMain"}
                data-plasmic-override={overrides.contentMain}
                className={classNames(projectcss.all, sty.contentMain)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobile")
                    ? true
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? true
                    : true
                ) ? (
                  <div
                    data-plasmic-name={"random"}
                    data-plasmic-override={overrides.random}
                    className={classNames(projectcss.all, sty.random)}
                  />
                ) : null}

                <div
                  data-plasmic-name={"fixedContainer"}
                  data-plasmic-override={overrides.fixedContainer}
                  className={classNames(projectcss.all, sty.fixedContainer)}
                >
                  <div
                    data-plasmic-name={"contentMainLeft"}
                    data-plasmic-override={overrides.contentMainLeft}
                    className={classNames(projectcss.all, sty.contentMainLeft)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"uploadBox"}
                      data-plasmic-override={overrides.uploadBox}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.uploadBox)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9I7Kq
                        )}
                      >
                        {"Post on feed"}
                      </div>

                      <textarea
                        data-plasmic-name={"textarea"}
                        data-plasmic-override={overrides.textarea}
                        className={classNames(
                          projectcss.all,
                          projectcss.textarea,
                          sty.textarea
                        )}
                        placeholder={"write up to 1,000 words"}
                        value={""}
                      />

                      <div
                        data-plasmic-name={"uploadButtons"}
                        data-plasmic-override={overrides.uploadButtons}
                        className={classNames(
                          projectcss.all,
                          sty.uploadButtons
                        )}
                      >
                        <div
                          data-plasmic-name={"uploadLeft"}
                          data-plasmic-override={overrides.uploadLeft}
                          className={classNames(projectcss.all, sty.uploadLeft)}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___4HEg0)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: imagepngCFPpvc8S,
                              fullWidth: 24,
                              fullHeight: 25,
                              aspectRatio: undefined
                            }}
                          />

                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__hkcf1)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: videoCamerapngAsa6YwWaw,
                              fullWidth: 24,
                              fullHeight: 25,
                              aspectRatio: undefined
                            }}
                          />

                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__hUfXx)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: smileyStickerpngJbiUkXsIu,
                              fullWidth: 24,
                              fullHeight: 25,
                              aspectRatio: undefined
                            }}
                          />
                        </div>

                        <div
                          data-plasmic-name={"uploadRight"}
                          data-plasmic-override={overrides.uploadRight}
                          className={classNames(
                            projectcss.all,
                            sty.uploadRight
                          )}
                        >
                          <button
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              projectcss.__wab_text,
                              sty.button__pgHQd
                            )}
                          >
                            {"Post"}
                          </button>
                        </div>
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"postBox"}
                      data-plasmic-override={overrides.postBox}
                      className={classNames(projectcss.all, sty.postBox)}
                    >
                      <div
                        data-plasmic-name={"postTop"}
                        data-plasmic-override={overrides.postTop}
                        className={classNames(projectcss.all, sty.postTop)}
                      >
                        <div
                          data-plasmic-name={"postTopLeft"}
                          data-plasmic-override={overrides.postTopLeft}
                          className={classNames(
                            projectcss.all,
                            sty.postTopLeft
                          )}
                        >
                          <p.PlasmicImg
                            data-plasmic-name={"postUserPic"}
                            data-plasmic-override={overrides.postUserPic}
                            alt={""}
                            className={classNames(sty.postUserPic)}
                            displayHeight={"50px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"50px"}
                            loading={"lazy"}
                            src={{
                              src: maskGrouppngXE1YnDtN,
                              fullWidth: 239,
                              fullHeight: 418,
                              aspectRatio: undefined
                            }}
                          />
                        </div>

                        <div
                          data-plasmic-name={"postTopRight"}
                          data-plasmic-override={overrides.postTopRight}
                          className={classNames(
                            projectcss.all,
                            sty.postTopRight
                          )}
                        >
                          <div
                            data-plasmic-name={"userInfo"}
                            data-plasmic-override={overrides.userInfo}
                            className={classNames(projectcss.all, sty.userInfo)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___5W4P
                              )}
                            >
                              {"Israel David"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qGsn
                              )}
                            >
                              {"software developer"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lIwrW
                              )}
                            >
                              {"Lagos, Nigeria"}
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"postDate"}
                            data-plasmic-override={overrides.postDate}
                            className={classNames(projectcss.all, sty.postDate)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jfjb3
                              )}
                            >
                              {"1hr ago"}
                            </div>
                          </div>
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"postMid"}
                        data-plasmic-override={overrides.postMid}
                        className={classNames(projectcss.all, sty.postMid)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pIp8U
                          )}
                        >
                          {
                            "This is the Opportunity to jon the world Leading Tech professionals in 2022. All you need do is to register with the link below"
                          }
                        </div>

                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___8BgaS)}
                          displayHeight={"300px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"90%"}
                          loading={"lazy"}
                          src={{
                            src: unsplashINwSiOcNzMgEGqqCl3UoC2,
                            fullWidth: 2880,
                            fullHeight: 1620,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        data-plasmic-name={"postBottom"}
                        data-plasmic-override={overrides.postBottom}
                        className={classNames(projectcss.all, sty.postBottom)}
                      >
                        <div
                          data-plasmic-name={"postBottomLeft"}
                          data-plasmic-override={overrides.postBottomLeft}
                          className={classNames(
                            projectcss.all,
                            sty.postBottomLeft
                          )}
                        >
                          <div
                            data-plasmic-name={"likePost"}
                            data-plasmic-override={overrides.likePost}
                            className={classNames(projectcss.all, sty.likePost)}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__f4YLh)}
                              displayHeight={"20px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"20px"}
                              loading={"lazy"}
                              src={{
                                src: likeSvgrepoCom1PngSIx1Fq6A,
                                fullWidth: 27,
                                fullHeight: 27,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__z8LOn
                              )}
                            >
                              {"1.3k"}
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"commentPost"}
                            data-plasmic-override={overrides.commentPost}
                            className={classNames(
                              projectcss.all,
                              sty.commentPost
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__heNof)}
                              displayHeight={"20px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"20px"}
                              loading={"lazy"}
                              src={{
                                src: commentDotsSvgrepoCompngFGbNXkfHo,
                                fullWidth: 27,
                                fullHeight: 27,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zvNm3
                              )}
                            >
                              {"1.3k"}
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"dislikePost"}
                            data-plasmic-override={overrides.dislikePost}
                            className={classNames(
                              projectcss.all,
                              sty.dislikePost
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__cOhGz)}
                              displayHeight={"20px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"20px"}
                              loading={"lazy"}
                              src={{
                                src: group1PngSeu39MuTw,
                                fullWidth: 26,
                                fullHeight: 26,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__g09NU
                              )}
                            >
                              {"1.3k"}
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"repostPost"}
                            data-plasmic-override={overrides.repostPost}
                            className={classNames(
                              projectcss.all,
                              sty.repostPost
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__qo6O5)}
                              displayHeight={"20px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"20px"}
                              loading={"lazy"}
                              src={{
                                src: shareSvgrepoCom1Png7HVEk3STj,
                                fullWidth: 27,
                                fullHeight: 27,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kfk2A
                              )}
                            >
                              {"1.3k"}
                            </div>
                          </div>
                        </div>

                        <div
                          data-plasmic-name={"postBottomRight"}
                          data-plasmic-override={overrides.postBottomRight}
                          className={classNames(
                            projectcss.all,
                            sty.postBottomRight
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__ovspt)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: optionspngXQxydTHeC,
                              fullWidth: 32,
                              fullHeight: 10,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                      </div>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"commentBox"}
                      data-plasmic-override={overrides.commentBox}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.commentBox)}
                    >
                      <div
                        data-plasmic-name={"comment"}
                        data-plasmic-override={overrides.comment}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.comment
                        )}
                      >
                        {"Comment"}
                      </div>

                      <input
                        data-plasmic-name={"textInput"}
                        data-plasmic-override={
                          overrides.textInput ?? overrides.textbox
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.input,
                          sty.textInput
                        )}
                        placeholder={"Enter your comment here"}
                        size={1}
                        type={"text"}
                        value={""}
                      />

                      <button
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          projectcss.__wab_text,
                          sty.button__xgjZi
                        )}
                      >
                        {"Comment"}
                      </button>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oVky3
                        )}
                      >
                        {"See all comments..."}
                      </div>
                    </p.Stack>
                  </div>
                </div>

                {(
                  hasVariant(globalVariants, "screen", "mobile")
                    ? true
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? true
                    : true
                ) ? (
                  <div
                    data-plasmic-name={"contentMainRight"}
                    data-plasmic-override={overrides.contentMainRight}
                    className={classNames(projectcss.all, sty.contentMainRight)}
                  >
                    <SelectCategory
                      data-plasmic-name={"selectCategory"}
                      data-plasmic-override={overrides.selectCategory}
                      className={classNames(
                        "__wab_instance",
                        sty.selectCategory
                      )}
                    />

                    <div
                      data-plasmic-name={"dashboardFollowers"}
                      data-plasmic-override={overrides.dashboardFollowers}
                      className={classNames(
                        projectcss.all,
                        sty.dashboardFollowers
                      )}
                    >
                      <div
                        data-plasmic-name={"group295"}
                        data-plasmic-override={overrides.group295}
                        className={classNames(projectcss.all, sty.group295)}
                      >
                        <div
                          data-plasmic-name={"rectangle301"}
                          data-plasmic-override={overrides.rectangle301}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle301
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tjI1
                          )}
                        >
                          {"Followers"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tYFxM
                          )}
                        >
                          {"See all"}
                        </div>

                        <div
                          data-plasmic-name={"group296"}
                          data-plasmic-override={overrides.group296}
                          className={classNames(projectcss.all, sty.group296)}
                        >
                          <div
                            data-plasmic-name={"rectangle208"}
                            data-plasmic-override={overrides.rectangle208}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle208
                            )}
                          />

                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__fLpto)}
                            displayHeight={"46px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"45px"}
                            loading={"lazy"}
                            src={{
                              src: ellipse20WFPavNohc,
                              fullWidth: 45,
                              fullHeight: 46,
                              aspectRatio: 0.978261
                            }}
                          />

                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__rxjh)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse25Fl0ULz14Q,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__aAbL7)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse22LUqnlFsU0Q,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__uBQh)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse26FJAd6PnElk,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__vtXH)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse2392CTrYBsQz,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img___2Jjey)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse21Y9IZfEfRmY,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ftWk7)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse24TGnei26Fio,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                          {true ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__muTcb)}
                              displayHeight={"46px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"45px"}
                              loading={"lazy"}
                              src={{
                                src: ellipse27Sok7Ktx2Uk,
                                fullWidth: 45,
                                fullHeight: 46,
                                aspectRatio: 0.978261
                              }}
                            />
                          ) : null}
                        </div>
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"messages2"}
                      data-plasmic-override={overrides.messages2}
                      className={classNames(projectcss.all, sty.messages2)}
                    >
                      <div
                        data-plasmic-name={"group297"}
                        data-plasmic-override={overrides.group297}
                        className={classNames(projectcss.all, sty.group297)}
                      >
                        <div
                          data-plasmic-name={"group298"}
                          data-plasmic-override={overrides.group298}
                          className={classNames(projectcss.all, sty.group298)}
                        >
                          <div
                            data-plasmic-name={"rectangle209"}
                            data-plasmic-override={overrides.rectangle209}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle209
                            )}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ovtDs
                            )}
                          >
                            {"Messages"}
                          </div>
                        </div>

                        <div
                          data-plasmic-name={"group148"}
                          data-plasmic-override={overrides.group148}
                          className={classNames(projectcss.all, sty.group148)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__r3Emr
                            )}
                          >
                            {"Abraham Adesanya"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ztA2D
                            )}
                          >
                            {
                              "How was your flight Joe, i couldnt text last night"
                            }
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8Podt
                            )}
                          >
                            {"12:00"}
                          </div>

                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__wh9Mk)}
                            displayHeight={"44px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"43px"}
                            loading={"lazy"}
                            src={{
                              src: ellipse36MwUq7LJfJy,
                              fullWidth: 43,
                              fullHeight: 44,
                              aspectRatio: 0.977273
                            }}
                          />
                        </div>

                        <Line3Icon
                          data-plasmic-name={"svg"}
                          data-plasmic-override={overrides.svg}
                          className={classNames(projectcss.all, sty.svg)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                ) : null}
              </div>

              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"bottomNav"}
                  data-plasmic-override={overrides.bottomNav}
                  className={classNames(projectcss.all, sty.bottomNav)}
                />
              ) : null}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "container",
    "dashboardSidebar",
    "content",
    "dashboardHeader",
    "contentMain",
    "random",
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "postBox",
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate",
    "postMid",
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight",
    "commentBox",
    "comment",
    "textInput",
    "textbox",
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "group297",
    "group298",
    "rectangle209",
    "group148",
    "svg",
    "bottomNav"
  ],

  container: [
    "container",
    "dashboardSidebar",
    "content",
    "dashboardHeader",
    "contentMain",
    "random",
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "postBox",
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate",
    "postMid",
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight",
    "commentBox",
    "comment",
    "textInput",
    "textbox",
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "group297",
    "group298",
    "rectangle209",
    "group148",
    "svg",
    "bottomNav"
  ],

  dashboardSidebar: ["dashboardSidebar"],
  content: [
    "content",
    "dashboardHeader",
    "contentMain",
    "random",
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "postBox",
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate",
    "postMid",
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight",
    "commentBox",
    "comment",
    "textInput",
    "textbox",
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "group297",
    "group298",
    "rectangle209",
    "group148",
    "svg",
    "bottomNav"
  ],

  dashboardHeader: ["dashboardHeader"],
  contentMain: [
    "contentMain",
    "random",
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "postBox",
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate",
    "postMid",
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight",
    "commentBox",
    "comment",
    "textInput",
    "textbox",
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "group297",
    "group298",
    "rectangle209",
    "group148",
    "svg"
  ],

  random: ["random"],
  fixedContainer: [
    "fixedContainer",
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "postBox",
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate",
    "postMid",
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight",
    "commentBox",
    "comment",
    "textInput",
    "textbox"
  ],

  contentMainLeft: [
    "contentMainLeft",
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight",
    "postBox",
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate",
    "postMid",
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight",
    "commentBox",
    "comment",
    "textInput",
    "textbox"
  ],

  uploadBox: [
    "uploadBox",
    "textarea",
    "uploadButtons",
    "uploadLeft",
    "uploadRight"
  ],

  textarea: ["textarea"],
  uploadButtons: ["uploadButtons", "uploadLeft", "uploadRight"],
  uploadLeft: ["uploadLeft"],
  uploadRight: ["uploadRight"],
  postBox: [
    "postBox",
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate",
    "postMid",
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight"
  ],

  postTop: [
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate"
  ],

  postTopLeft: ["postTopLeft", "postUserPic"],
  postUserPic: ["postUserPic"],
  postTopRight: ["postTopRight", "userInfo", "postDate"],
  userInfo: ["userInfo"],
  postDate: ["postDate"],
  postMid: ["postMid"],
  postBottom: [
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight"
  ],

  postBottomLeft: [
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost"
  ],

  likePost: ["likePost"],
  commentPost: ["commentPost"],
  dislikePost: ["dislikePost"],
  repostPost: ["repostPost"],
  postBottomRight: ["postBottomRight"],
  commentBox: ["commentBox", "comment", "textInput", "textbox"],
  comment: ["comment"],
  textInput: ["textInput", "textbox"],
  contentMainRight: [
    "contentMainRight",
    "selectCategory",
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208",
    "messages2",
    "group297",
    "group298",
    "rectangle209",
    "group148",
    "svg"
  ],

  selectCategory: ["selectCategory"],
  dashboardFollowers: [
    "dashboardFollowers",
    "group295",
    "rectangle301",
    "group296",
    "rectangle208"
  ],

  group295: ["group295", "rectangle301", "group296", "rectangle208"],
  rectangle301: ["rectangle301"],
  group296: ["group296", "rectangle208"],
  rectangle208: ["rectangle208"],
  messages2: [
    "messages2",
    "group297",
    "group298",
    "rectangle209",
    "group148",
    "svg"
  ],

  group297: ["group297", "group298", "rectangle209", "group148", "svg"],
  group298: ["group298", "rectangle209"],
  rectangle209: ["rectangle209"],
  group148: ["group148"],
  svg: ["svg"],
  bottomNav: ["bottomNav"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicDashboard__ArgProps,
          internalVariantPropNames: PlasmicDashboard__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicDashboard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDashboard";
  } else {
    func.displayName = `PlasmicDashboard.${nodeName}`;
  }
  return func;
}

export const PlasmicDashboard = Object.assign(
  // Top-level PlasmicDashboard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    container: makeNodeComponent("container"),
    dashboardSidebar: makeNodeComponent("dashboardSidebar"),
    content: makeNodeComponent("content"),
    dashboardHeader: makeNodeComponent("dashboardHeader"),
    contentMain: makeNodeComponent("contentMain"),
    random: makeNodeComponent("random"),
    fixedContainer: makeNodeComponent("fixedContainer"),
    contentMainLeft: makeNodeComponent("contentMainLeft"),
    uploadBox: makeNodeComponent("uploadBox"),
    textarea: makeNodeComponent("textarea"),
    uploadButtons: makeNodeComponent("uploadButtons"),
    uploadLeft: makeNodeComponent("uploadLeft"),
    uploadRight: makeNodeComponent("uploadRight"),
    postBox: makeNodeComponent("postBox"),
    postTop: makeNodeComponent("postTop"),
    postTopLeft: makeNodeComponent("postTopLeft"),
    postUserPic: makeNodeComponent("postUserPic"),
    postTopRight: makeNodeComponent("postTopRight"),
    userInfo: makeNodeComponent("userInfo"),
    postDate: makeNodeComponent("postDate"),
    postMid: makeNodeComponent("postMid"),
    postBottom: makeNodeComponent("postBottom"),
    postBottomLeft: makeNodeComponent("postBottomLeft"),
    likePost: makeNodeComponent("likePost"),
    commentPost: makeNodeComponent("commentPost"),
    dislikePost: makeNodeComponent("dislikePost"),
    repostPost: makeNodeComponent("repostPost"),
    postBottomRight: makeNodeComponent("postBottomRight"),
    commentBox: makeNodeComponent("commentBox"),
    comment: makeNodeComponent("comment"),
    textInput: makeNodeComponent("textInput"),
    contentMainRight: makeNodeComponent("contentMainRight"),
    selectCategory: makeNodeComponent("selectCategory"),
    dashboardFollowers: makeNodeComponent("dashboardFollowers"),
    group295: makeNodeComponent("group295"),
    rectangle301: makeNodeComponent("rectangle301"),
    group296: makeNodeComponent("group296"),
    rectangle208: makeNodeComponent("rectangle208"),
    messages2: makeNodeComponent("messages2"),
    group297: makeNodeComponent("group297"),
    group298: makeNodeComponent("group298"),
    rectangle209: makeNodeComponent("rectangle209"),
    group148: makeNodeComponent("group148"),
    svg: makeNodeComponent("svg"),
    bottomNav: makeNodeComponent("bottomNav"),
    // Metadata about props expected for PlasmicDashboard
    internalVariantProps: PlasmicDashboard__VariantProps,
    internalArgProps: PlasmicDashboard__ArgProps
  }
);

export default PlasmicDashboard;
/* prettier-ignore-end */
