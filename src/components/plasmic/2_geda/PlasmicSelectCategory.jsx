// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ovjdXhydzXTq3Bc7u9wCpt
// Component: 6HSr9YyfAE
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_2_geda.module.css"; // plasmic-import: ovjdXhydzXTq3Bc7u9wCpt/projectcss
import sty from "./PlasmicSelectCategory.module.css"; // plasmic-import: 6HSr9YyfAE/css
import unsplashINwSiOcNzMgEGqqCl3UoC2 from "./images/unsplashINwSiOcNzMg.jpeg"; // plasmic-import: EGqqCl3UoC2/picture

export const PlasmicSelectCategory__VariantProps = new Array();

export const PlasmicSelectCategory__ArgProps = new Array();

function PlasmicSelectCategory__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__jGGt7
        )}
      >
        {"Select Category"}
      </div>

      <div
        data-plasmic-name={"categoriesGrid"}
        data-plasmic-override={overrides.categoriesGrid}
        className={classNames(projectcss.all, sty.categoriesGrid)}
      >
        <div
          data-plasmic-name={"group116"}
          data-plasmic-override={overrides.group116}
          className={classNames(projectcss.all, sty.group116)}
        >
          <p.PlasmicImg
            data-plasmic-name={"img"}
            data-plasmic-override={overrides.img}
            alt={""}
            className={classNames(sty.img)}
            displayHeight={"38px"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"38px"}
            loading={"lazy"}
            src={{
              src: unsplashINwSiOcNzMgEGqqCl3UoC2,
              fullWidth: 2880,
              fullHeight: 1620,
              aspectRatio: undefined
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__qdt0
            )}
          >
            {"Phones &\nDevices"}
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "categoriesGrid", "group116", "img"],
  categoriesGrid: ["categoriesGrid", "group116", "img"],
  group116: ["group116", "img"],
  img: ["img"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicSelectCategory__ArgProps,
          internalVariantPropNames: PlasmicSelectCategory__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicSelectCategory__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSelectCategory";
  } else {
    func.displayName = `PlasmicSelectCategory.${nodeName}`;
  }
  return func;
}

export const PlasmicSelectCategory = Object.assign(
  // Top-level PlasmicSelectCategory renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    categoriesGrid: makeNodeComponent("categoriesGrid"),
    group116: makeNodeComponent("group116"),
    img: makeNodeComponent("img"),
    // Metadata about props expected for PlasmicSelectCategory
    internalVariantProps: PlasmicSelectCategory__VariantProps,
    internalArgProps: PlasmicSelectCategory__ArgProps
  }
);

export default PlasmicSelectCategory;
/* prettier-ignore-end */
