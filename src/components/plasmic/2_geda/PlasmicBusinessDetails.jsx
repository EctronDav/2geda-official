// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ovjdXhydzXTq3Bc7u9wCpt
// Component: qZIz_oHbg2S
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import DashboardSidebar from "../../DashboardSidebar"; // plasmic-import: 7WJwRnVAxlX/component
import BusinessHeader from "../../BusinessHeader"; // plasmic-import: QNsWw2e-3G/component
import SelectCategory from "../../SelectCategory"; // plasmic-import: 6HSr9YyfAE/component
import InventoryList from "../../InventoryList"; // plasmic-import: Gn6XkLaEoG/component
import { useScreenVariants as useScreenVariantsgcBBykOvh4Vq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gcB_bykOvh4VQ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_2_geda.module.css"; // plasmic-import: ovjdXhydzXTq3Bc7u9wCpt/projectcss
import sty from "./PlasmicBusinessDetails.module.css"; // plasmic-import: qZIz_oHbg2S/css
import unsplash5N3Jp9WajTs2QYKzMQhs8 from "./images/unsplash5N3Jp9WajTs2.jpeg"; // plasmic-import: Q_YKzMQhs8/picture

export const PlasmicBusinessDetails__VariantProps = new Array();

export const PlasmicBusinessDetails__ArgProps = new Array();

function PlasmicBusinessDetails__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgcBBykOvh4Vq()
  });

  return (
    <React.Fragment>
      <div
        data-plasmic-name={"root2"}
        data-plasmic-override={overrides.root2}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          sty.root2
        )}
      >
        <DashboardSidebar
          data-plasmic-name={"dashboardSidebar"}
          data-plasmic-override={overrides.dashboardSidebar}
          className={classNames("__wab_instance", sty.dashboardSidebar)}
        />

        <div
          data-plasmic-name={"main"}
          data-plasmic-override={overrides.main}
          className={classNames(projectcss.all, sty.main)}
        >
          <BusinessHeader
            data-plasmic-name={"businessHeader"}
            data-plasmic-override={overrides.businessHeader}
            className={classNames("__wab_instance", sty.businessHeader)}
          />

          <div
            data-plasmic-name={"peopleMainContent"}
            data-plasmic-override={overrides.peopleMainContent}
            className={classNames(projectcss.all, sty.peopleMainContent)}
          >
            <div
              data-plasmic-name={"peopleMainContentLeft"}
              data-plasmic-override={overrides.peopleMainContentLeft}
              className={classNames(projectcss.all, sty.peopleMainContentLeft)}
            >
              <div
                data-plasmic-name={"rectangle209"}
                data-plasmic-override={overrides.rectangle209}
                className={classNames(projectcss.all, sty.rectangle209)}
              >
                <span
                  data-plasmic-name={"span"}
                  data-plasmic-override={overrides.span}
                  className={classNames(
                    projectcss.all,
                    projectcss.span,
                    projectcss.__wab_text,
                    sty.span
                  )}
                >
                  {"People"}
                </span>
              </div>

              <div
                data-plasmic-name={"rectangle218"}
                data-plasmic-override={overrides.rectangle218}
                className={classNames(projectcss.all, sty.rectangle218)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hAhSd
                  )}
                >
                  {"Followers(23 million)"}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__uksZ)}>
                  <div
                    data-plasmic-name={"user"}
                    data-plasmic-override={overrides.user}
                    className={classNames(projectcss.all, sty.user)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__y7ATl)}
                      displayHeight={"102px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"111px"}
                      loading={"lazy"}
                      src={{
                        src: unsplash5N3Jp9WajTs2QYKzMQhs8,
                        fullWidth: 384,
                        fullHeight: 480,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eahHk
                      )}
                    >
                      {"Dupe Alagbe"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xKyOj
                      )}
                    >
                      {"Lekki, Lagos"}
                    </div>
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ld4Bd
                  )}
                >
                  {"View all"}
                </div>
              </div>

              <button
                data-plasmic-name={"rectangle273"}
                data-plasmic-override={overrides.rectangle273}
                className={classNames(
                  projectcss.all,
                  projectcss.button,
                  sty.rectangle273
                )}
              />

              <div
                data-plasmic-name={"rectangle214"}
                data-plasmic-override={overrides.rectangle214}
                className={classNames(projectcss.all, sty.rectangle214)}
              >
                <div
                  data-plasmic-name={"suggestions"}
                  data-plasmic-override={overrides.suggestions}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.suggestions
                  )}
                >
                  {"Suggestions\n"}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__vR6Iu)}>
                  <div
                    data-plasmic-name={"suggestedUser"}
                    data-plasmic-override={overrides.suggestedUser}
                    className={classNames(projectcss.all, sty.suggestedUser)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hrb93)}
                      displayHeight={"102px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"111px"}
                      loading={"lazy"}
                      src={{
                        src: unsplash5N3Jp9WajTs2QYKzMQhs8,
                        fullWidth: 384,
                        fullHeight: 480,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </div>
            </div>

            {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
              <div
                data-plasmic-name={"peopleMainContentRight"}
                data-plasmic-override={overrides.peopleMainContentRight}
                className={classNames(
                  projectcss.all,
                  sty.peopleMainContentRight
                )}
              >
                <SelectCategory
                  data-plasmic-name={"selectCategory"}
                  data-plasmic-override={overrides.selectCategory}
                  className={classNames("__wab_instance", sty.selectCategory)}
                />

                <InventoryList
                  data-plasmic-name={"inventoryList"}
                  data-plasmic-override={overrides.inventoryList}
                  className={classNames("__wab_instance", sty.inventoryList)}
                />
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root2: [
    "root2",
    "dashboardSidebar",
    "main",
    "businessHeader",
    "peopleMainContent",
    "peopleMainContentLeft",
    "rectangle209",
    "span",
    "rectangle218",
    "user",
    "rectangle273",
    "rectangle214",
    "suggestions",
    "suggestedUser",
    "peopleMainContentRight",
    "selectCategory",
    "inventoryList"
  ],

  dashboardSidebar: ["dashboardSidebar"],
  main: [
    "main",
    "businessHeader",
    "peopleMainContent",
    "peopleMainContentLeft",
    "rectangle209",
    "span",
    "rectangle218",
    "user",
    "rectangle273",
    "rectangle214",
    "suggestions",
    "suggestedUser",
    "peopleMainContentRight",
    "selectCategory",
    "inventoryList"
  ],

  businessHeader: ["businessHeader"],
  peopleMainContent: [
    "peopleMainContent",
    "peopleMainContentLeft",
    "rectangle209",
    "span",
    "rectangle218",
    "user",
    "rectangle273",
    "rectangle214",
    "suggestions",
    "suggestedUser",
    "peopleMainContentRight",
    "selectCategory",
    "inventoryList"
  ],

  peopleMainContentLeft: [
    "peopleMainContentLeft",
    "rectangle209",
    "span",
    "rectangle218",
    "user",
    "rectangle273",
    "rectangle214",
    "suggestions",
    "suggestedUser"
  ],

  rectangle209: ["rectangle209", "span"],
  span: ["span"],
  rectangle218: ["rectangle218", "user"],
  user: ["user"],
  rectangle273: ["rectangle273"],
  rectangle214: ["rectangle214", "suggestions", "suggestedUser"],
  suggestions: ["suggestions"],
  suggestedUser: ["suggestedUser"],
  peopleMainContentRight: [
    "peopleMainContentRight",
    "selectCategory",
    "inventoryList"
  ],

  selectCategory: ["selectCategory"],
  inventoryList: ["inventoryList"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicBusinessDetails__ArgProps,
          internalVariantPropNames: PlasmicBusinessDetails__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicBusinessDetails__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root2") {
    func.displayName = "PlasmicBusinessDetails";
  } else {
    func.displayName = `PlasmicBusinessDetails.${nodeName}`;
  }
  return func;
}

export const PlasmicBusinessDetails = Object.assign(
  // Top-level PlasmicBusinessDetails renders the root element
  makeNodeComponent("root2"),
  {
    // Helper components rendering sub-elements
    dashboardSidebar: makeNodeComponent("dashboardSidebar"),
    main: makeNodeComponent("main"),
    businessHeader: makeNodeComponent("businessHeader"),
    peopleMainContent: makeNodeComponent("peopleMainContent"),
    peopleMainContentLeft: makeNodeComponent("peopleMainContentLeft"),
    rectangle209: makeNodeComponent("rectangle209"),
    span: makeNodeComponent("span"),
    rectangle218: makeNodeComponent("rectangle218"),
    user: makeNodeComponent("user"),
    rectangle273: makeNodeComponent("rectangle273"),
    rectangle214: makeNodeComponent("rectangle214"),
    suggestions: makeNodeComponent("suggestions"),
    suggestedUser: makeNodeComponent("suggestedUser"),
    peopleMainContentRight: makeNodeComponent("peopleMainContentRight"),
    selectCategory: makeNodeComponent("selectCategory"),
    inventoryList: makeNodeComponent("inventoryList"),
    // Metadata about props expected for PlasmicBusinessDetails
    internalVariantProps: PlasmicBusinessDetails__VariantProps,
    internalArgProps: PlasmicBusinessDetails__ArgProps
  }
);

export default PlasmicBusinessDetails;
/* prettier-ignore-end */
