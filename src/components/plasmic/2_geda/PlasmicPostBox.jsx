// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ovjdXhydzXTq3Bc7u9wCpt
// Component: Dq6gvuXdNEn
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_2_geda.module.css"; // plasmic-import: ovjdXhydzXTq3Bc7u9wCpt/projectcss
import sty from "./PlasmicPostBox.module.css"; // plasmic-import: Dq6gvuXdNEn/css
import maskGrouppngXE1YnDtN from "./images/maskGrouppng.png"; // plasmic-import: xE1ynDtN-/picture
import unsplashINwSiOcNzMgEGqqCl3UoC2 from "./images/unsplashINwSiOcNzMg.jpeg"; // plasmic-import: EGqqCl3UoC2/picture
import likeSvgrepoCom1PngSIx1Fq6A from "./images/likeSvgrepoCom1Png.png"; // plasmic-import: S_IX1FQ6A/picture
import commentDotsSvgrepoCompngFGbNXkfHo from "./images/commentDotsSvgrepoCompng.png"; // plasmic-import: FGbNXkfHO/picture
import group1PngSeu39MuTw from "./images/group1Png.png"; // plasmic-import: seu39MuTw/picture
import shareSvgrepoCom1Png7HVEk3STj from "./images/shareSvgrepoCom1Png.png"; // plasmic-import: 7hVEk3sTJ/picture
import optionspngXQxydTHeC from "./images/optionspng.png"; // plasmic-import: xQxydTHeC/picture

export const PlasmicPostBox__VariantProps = new Array();

export const PlasmicPostBox__ArgProps = new Array();

function PlasmicPostBox__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"postTop"}
        data-plasmic-override={overrides.postTop}
        className={classNames(projectcss.all, sty.postTop)}
      >
        <div
          data-plasmic-name={"postTopLeft"}
          data-plasmic-override={overrides.postTopLeft}
          className={classNames(projectcss.all, sty.postTopLeft)}
        >
          <p.PlasmicImg
            data-plasmic-name={"postUserPic"}
            data-plasmic-override={overrides.postUserPic}
            alt={""}
            className={classNames(sty.postUserPic)}
            displayHeight={"50px"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"50px"}
            loading={"lazy"}
            src={{
              src: maskGrouppngXE1YnDtN,
              fullWidth: 239,
              fullHeight: 418,
              aspectRatio: undefined
            }}
          />
        </div>

        <div
          data-plasmic-name={"postTopRight"}
          data-plasmic-override={overrides.postTopRight}
          className={classNames(projectcss.all, sty.postTopRight)}
        >
          <div
            data-plasmic-name={"userInfo"}
            data-plasmic-override={overrides.userInfo}
            className={classNames(projectcss.all, sty.userInfo)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ihxCv
              )}
            >
              {"Israel David"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__lk4GA
              )}
            >
              {"software developer"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___4KCeA
              )}
            >
              {"Lagos, Nigeria"}
            </div>
          </div>

          <div
            data-plasmic-name={"postDate"}
            data-plasmic-override={overrides.postDate}
            className={classNames(projectcss.all, sty.postDate)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___3ElYz
              )}
            >
              {"1hr ago"}
            </div>
          </div>
        </div>
      </div>

      <div
        data-plasmic-name={"postMid"}
        data-plasmic-override={overrides.postMid}
        className={classNames(projectcss.all, sty.postMid)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__qiyg9
          )}
        >
          {
            "This is the Opportunity to jon the world Leading Tech professionals in 2022. All you need do is to register with the link below"
          }
        </div>

        <p.PlasmicImg
          alt={""}
          className={classNames(sty.img__n5GFt)}
          displayHeight={"300px"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"90%"}
          loading={"lazy"}
          src={{
            src: unsplashINwSiOcNzMgEGqqCl3UoC2,
            fullWidth: 2880,
            fullHeight: 1620,
            aspectRatio: undefined
          }}
        />
      </div>

      <div
        data-plasmic-name={"postBottom"}
        data-plasmic-override={overrides.postBottom}
        className={classNames(projectcss.all, sty.postBottom)}
      >
        <div
          data-plasmic-name={"postBottomLeft"}
          data-plasmic-override={overrides.postBottomLeft}
          className={classNames(projectcss.all, sty.postBottomLeft)}
        >
          <div
            data-plasmic-name={"likePost"}
            data-plasmic-override={overrides.likePost}
            className={classNames(projectcss.all, sty.likePost)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__j2Kug)}
              displayHeight={"20px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"20px"}
              loading={"lazy"}
              src={{
                src: likeSvgrepoCom1PngSIx1Fq6A,
                fullWidth: 27,
                fullHeight: 27,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___9LrBc
              )}
            >
              {"1.3k"}
            </div>
          </div>

          <div
            data-plasmic-name={"commentPost"}
            data-plasmic-override={overrides.commentPost}
            className={classNames(projectcss.all, sty.commentPost)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__igh8)}
              displayHeight={"20px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"20px"}
              loading={"lazy"}
              src={{
                src: commentDotsSvgrepoCompngFGbNXkfHo,
                fullWidth: 27,
                fullHeight: 27,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iRpGv
              )}
            >
              {"1.3k"}
            </div>
          </div>

          <div
            data-plasmic-name={"dislikePost"}
            data-plasmic-override={overrides.dislikePost}
            className={classNames(projectcss.all, sty.dislikePost)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__eaZHi)}
              displayHeight={"20px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"20px"}
              loading={"lazy"}
              src={{
                src: group1PngSeu39MuTw,
                fullWidth: 26,
                fullHeight: 26,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__smymL
              )}
            >
              {"1.3k"}
            </div>
          </div>

          <div
            data-plasmic-name={"repostPost"}
            data-plasmic-override={overrides.repostPost}
            className={classNames(projectcss.all, sty.repostPost)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__rMiX)}
              displayHeight={"20px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"20px"}
              loading={"lazy"}
              src={{
                src: shareSvgrepoCom1Png7HVEk3STj,
                fullWidth: 27,
                fullHeight: 27,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__l7ZdJ
              )}
            >
              {"1.3k"}
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"postBottomRight"}
          data-plasmic-override={overrides.postBottomRight}
          className={classNames(projectcss.all, sty.postBottomRight)}
        >
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__hVvZx)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: optionspngXQxydTHeC,
              fullWidth: 32,
              fullHeight: 10,
              aspectRatio: undefined
            }}
          />
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate",
    "postMid",
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight"
  ],

  postTop: [
    "postTop",
    "postTopLeft",
    "postUserPic",
    "postTopRight",
    "userInfo",
    "postDate"
  ],

  postTopLeft: ["postTopLeft", "postUserPic"],
  postUserPic: ["postUserPic"],
  postTopRight: ["postTopRight", "userInfo", "postDate"],
  userInfo: ["userInfo"],
  postDate: ["postDate"],
  postMid: ["postMid"],
  postBottom: [
    "postBottom",
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost",
    "postBottomRight"
  ],

  postBottomLeft: [
    "postBottomLeft",
    "likePost",
    "commentPost",
    "dislikePost",
    "repostPost"
  ],

  likePost: ["likePost"],
  commentPost: ["commentPost"],
  dislikePost: ["dislikePost"],
  repostPost: ["repostPost"],
  postBottomRight: ["postBottomRight"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPostBox__ArgProps,
          internalVariantPropNames: PlasmicPostBox__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicPostBox__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPostBox";
  } else {
    func.displayName = `PlasmicPostBox.${nodeName}`;
  }
  return func;
}

export const PlasmicPostBox = Object.assign(
  // Top-level PlasmicPostBox renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    postTop: makeNodeComponent("postTop"),
    postTopLeft: makeNodeComponent("postTopLeft"),
    postUserPic: makeNodeComponent("postUserPic"),
    postTopRight: makeNodeComponent("postTopRight"),
    userInfo: makeNodeComponent("userInfo"),
    postDate: makeNodeComponent("postDate"),
    postMid: makeNodeComponent("postMid"),
    postBottom: makeNodeComponent("postBottom"),
    postBottomLeft: makeNodeComponent("postBottomLeft"),
    likePost: makeNodeComponent("likePost"),
    commentPost: makeNodeComponent("commentPost"),
    dislikePost: makeNodeComponent("dislikePost"),
    repostPost: makeNodeComponent("repostPost"),
    postBottomRight: makeNodeComponent("postBottomRight"),
    // Metadata about props expected for PlasmicPostBox
    internalVariantProps: PlasmicPostBox__VariantProps,
    internalArgProps: PlasmicPostBox__ArgProps
  }
);

export default PlasmicPostBox;
/* prettier-ignore-end */
