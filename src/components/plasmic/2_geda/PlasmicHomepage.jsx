// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ovjdXhydzXTq3Bc7u9wCpt
// Component: i1OkOah75jZ0
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import MainLeft from "../../MainLeft"; // plasmic-import: AuD_LYJAI4/component
import { useScreenVariants as useScreenVariantsgcBBykOvh4Vq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gcB_bykOvh4VQ/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_2_geda.module.css"; // plasmic-import: ovjdXhydzXTq3Bc7u9wCpt/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: i1OkOah75jZ0/css
import _2Geda11XT8XtazA5Pq from "./images/_2Geda11.png"; // plasmic-import: xT8XtazA5Pq/picture
import signInRegisterSvgrepoCompngHbimMaPrc from "./images/signInRegisterSvgrepoCompng.png"; // plasmic-import: HbimMaPRC/picture
import chatSvgrepoCom1Png45Oy16YF from "./images/chatSvgrepoCom1Png.png"; // plasmic-import: 45oy16Y-F/picture
import newsSvgrepoCom1PngLaGvCN from "./images/newsSvgrepoCom1Png.png"; // plasmic-import: _la_gv_cN/picture
import groupPeopleSvgrepoCompngGlmYMNeM from "./images/groupPeopleSvgrepoCompng.png"; // plasmic-import: GlmY_mNeM/picture
import shopSvgrepoCompngIDz8Pdd8H from "./images/shopSvgrepoCompng.png"; // plasmic-import: iDz8PDD8H/picture
import connectionSvgrepoCompngQxj7Qesum from "./images/connectionSvgrepoCompng.png"; // plasmic-import: QXJ7QESUM/picture

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgcBBykOvh4Vq()
  });

  return (
    <React.Fragment>
      <p.Stack
        as={"div"}
        data-plasmic-name={"root2"}
        data-plasmic-override={overrides.root2}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        hasGap={true}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          sty.root2
        )}
      >
        <div
          data-plasmic-name={"container"}
          data-plasmic-override={overrides.container}
          className={classNames(projectcss.all, sty.container)}
        >
          <div
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <div
              data-plasmic-name={"headerLeft"}
              data-plasmic-override={overrides.headerLeft}
              className={classNames(projectcss.all, sty.headerLeft)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__eTpoA)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"70px"}
                loading={"lazy"}
                src={{
                  src: _2Geda11XT8XtazA5Pq,
                  fullWidth: 512,
                  fullHeight: 516,
                  aspectRatio: undefined
                }}
              />
            </div>

            <div
              data-plasmic-name={"headerRight"}
              data-plasmic-override={overrides.headerRight}
              className={classNames(projectcss.all, sty.headerRight)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <button
                  className={classNames(
                    projectcss.all,
                    projectcss.button,
                    projectcss.__wab_text,
                    sty.button__oxyGy
                  )}
                >
                  {"Sign in"}
                </button>
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <button
                  className={classNames(
                    projectcss.all,
                    projectcss.button,
                    projectcss.__wab_text,
                    sty.button___9ZNar
                  )}
                >
                  {"Sign up"}
                </button>
              ) : null}
            </div>
          </div>

          {true ? (
            <main
              data-plasmic-name={"main"}
              data-plasmic-override={overrides.main}
              className={classNames(projectcss.all, sty.main)}
            >
              <MainLeft
                data-plasmic-name={"mainLeft"}
                data-plasmic-override={overrides.mainLeft}
                className={classNames("__wab_instance", sty.mainLeft)}
              />

              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"mainRight"}
                  data-plasmic-override={overrides.mainRight}
                  className={classNames(projectcss.all, sty.mainRight)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobile") ? true : true
                  ) ? (
                    <div
                      data-plasmic-name={"gridContainer"}
                      data-plasmic-override={overrides.gridContainer}
                      className={classNames(projectcss.all, sty.gridContainer)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__timb7
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7JUR
                            )}
                          >
                            {"All Features here"}
                          </div>
                        </div>
                      ) : null}

                      <div
                        data-plasmic-name={"gridContent"}
                        data-plasmic-override={overrides.gridContent}
                        className={classNames(projectcss.all, sty.gridContent)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xT8M
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jGaUs
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__hUBbd)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: signInRegisterSvgrepoCompngHbimMaPrc,
                                fullWidth: 45,
                                fullHeight: 45,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___3CU7R
                              )}
                            >
                              {
                                "Become a Member by Creating a new account or\nsign-in as an existing user."
                              }
                            </div>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___895Vf
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img___1Uc8K)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: chatSvgrepoCom1Png45Oy16YF,
                                fullWidth: 45,
                                fullHeight: 45,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zwIz5
                              )}
                            >
                              {
                                "Chat Unlimited!\nShare images, videos, files\nin your conversation."
                              }
                            </div>
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0Tg9M
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__stQqy
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__pPesF)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: newsSvgrepoCom1PngLaGvCN,
                                fullWidth: 45,
                                fullHeight: 45,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__frEs
                              )}
                            >
                              {
                                "Stay updated on\nPost and News carefully\nCurated your you."
                              }
                            </div>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nT7SH
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__viIvw)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: groupPeopleSvgrepoCompngGlmYMNeM,
                                fullWidth: 45,
                                fullHeight: 45,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0GW8M
                              )}
                            >
                              {
                                "Meet with People and Professionals in all\nsphere of Careers.\n"
                              }
                            </div>
                          </div>
                        </div>

                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qvn0I
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___5Yi5S
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__apMqd)}
                                displayHeight={"auto"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: shopSvgrepoCompngIDz8Pdd8H,
                                  fullWidth: 45,
                                  fullHeight: 45,
                                  aspectRatio: undefined
                                }}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2WTTn
                                )}
                              >
                                {
                                  "Outlet is your Marketplace.\nBuy and sell Goods at a touch.\nServices can also be posted."
                                }
                              </div>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___2QSe
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__ikiPd)}
                                displayHeight={"auto"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: connectionSvgrepoCompngQxj7Qesum,
                                  fullWidth: 45,
                                  fullHeight: 45,
                                  aspectRatio: undefined
                                }}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__iUmm
                                )}
                              >
                                {
                                  "Connect with People all over the world\n and reach out to more clients"
                                }
                              </div>
                            </div>
                          </div>
                        ) : null}
                      </div>
                    </div>
                  ) : null}
                </div>
              ) : null}
            </main>
          ) : null}
        </div>
      </p.Stack>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root2: [
    "root2",
    "container",
    "header",
    "headerLeft",
    "headerRight",
    "main",
    "mainLeft",
    "mainRight",
    "gridContainer",
    "gridContent"
  ],

  container: [
    "container",
    "header",
    "headerLeft",
    "headerRight",
    "main",
    "mainLeft",
    "mainRight",
    "gridContainer",
    "gridContent"
  ],

  header: ["header", "headerLeft", "headerRight"],
  headerLeft: ["headerLeft"],
  headerRight: ["headerRight"],
  main: ["main", "mainLeft", "mainRight", "gridContainer", "gridContent"],
  mainLeft: ["mainLeft"],
  mainRight: ["mainRight", "gridContainer", "gridContent"],
  gridContainer: ["gridContainer", "gridContent"],
  gridContent: ["gridContent"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root2") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root2"),
  {
    // Helper components rendering sub-elements
    container: makeNodeComponent("container"),
    header: makeNodeComponent("header"),
    headerLeft: makeNodeComponent("headerLeft"),
    headerRight: makeNodeComponent("headerRight"),
    main: makeNodeComponent("main"),
    mainLeft: makeNodeComponent("mainLeft"),
    mainRight: makeNodeComponent("mainRight"),
    gridContainer: makeNodeComponent("gridContainer"),
    gridContent: makeNodeComponent("gridContent"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
