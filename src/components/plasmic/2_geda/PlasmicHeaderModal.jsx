// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ovjdXhydzXTq3Bc7u9wCpt
// Component: dngvs-_okm
import * as React from "react";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: WzKkY_fim5/component
import "@plasmicapp/react-web/lib/plasmic.css";
import sty from "./PlasmicHeaderModal.module.css"; // plasmic-import: dngvs-_okm/css

export const PlasmicHeaderModal__VariantProps = new Array();

export const PlasmicHeaderModal__ArgProps = new Array();

function PlasmicHeaderModal__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  return (
    <Header
      data-plasmic-name={"root2"}
      data-plasmic-override={overrides.root2}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames("__wab_instance", sty.root2)}
    />
  );
}

const PlasmicDescendants = {
  root2: ["root2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHeaderModal__ArgProps,
          internalVariantPropNames: PlasmicHeaderModal__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicHeaderModal__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root2") {
    func.displayName = "PlasmicHeaderModal";
  } else {
    func.displayName = `PlasmicHeaderModal.${nodeName}`;
  }
  return func;
}

export const PlasmicHeaderModal = Object.assign(
  // Top-level PlasmicHeaderModal renders the root element
  makeNodeComponent("root2"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicHeaderModal
    internalVariantProps: PlasmicHeaderModal__VariantProps,
    internalArgProps: PlasmicHeaderModal__ArgProps
  }
);

export default PlasmicHeaderModal;
/* prettier-ignore-end */
